{
	"info": {
		"_postman_id": "60430163-4c99-4c51-9511-9a41bd85fbc5",
		"name": "github using variable",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25990478"
	},
	"item": [
		{
			"name": "createrepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your repository name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Testing\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your Description \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.description).to.eql(\"My testing repo\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.private).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Your owner name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.owner.login).to.eql(\"SanjanaTU\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"Testing\",\r\n\"description\":\"My testing repo\",\r\n\"private\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}/user/repos",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Repo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your repo\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Testing\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your description\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.description).to.eql(\"My testing repo\");\r",
							"});\r",
							"\r",
							"pm.test(\"status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.private).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Your owner name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.owner.login).to.eql(\"SanjanaTU\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/repos/{{owner}}/{{repo}}",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"repos",
						"{{owner}}",
						"{{repo}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Repo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your repository\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Testing\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your description\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.description).to.eql(\"My testing repository\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.private).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Your owner name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.owner.login).to.eql(\"SanjanaTU\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"description\":\"My testing repository\",\r\n\"private\":false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}/repos/{{owner}}/{{repo}}",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"repos",
						"{{owner}}",
						"{{repo}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete repo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/repos/{{owner}}/{{repo}}",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"repos",
						"{{owner}}",
						"{{repo}}"
					]
				}
			},
			"response": []
		}
	]
}